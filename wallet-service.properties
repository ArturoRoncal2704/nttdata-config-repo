
# Puerto
server.port=8181

spring.data.mongodb.uri=mongodb+srv://ntt_access_proyects:sTBqd1peP3HFJgHa@nttdatabnkdb.g8qwtzr.mongodb.net/NTTDataBnkDB?retryWrites=true&w=majority&appName=NTTDataBnkDB
spring.data.mongodb.database=NTTDataBnkDB

eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.appname=wallet-service
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${server.port}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

#Seguridad
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8091/realms/nttdatabank
app.auth.allowed-issuers=http://keycloak:8091/realms/nttdatabank,http://localhost:8091/realms/nttdatabank


#redis
spring.redis.host=localhost
spring.redis.port=6379


# Kafka - conexión
spring.kafka.bootstrap-servers=localhost:9092

# Kafka - consumer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.group-id=wallet-exec-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.isolation.level=read_committed
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.nttdata.NTT_WalletService.messaging.card
spring.kafka.consumer.properties.spring.json.use.type.headers=false
#spring.kafka.consumer.properties.spring.json.value.default.type=com.nttdata.NTT_WalletService.messaging.card.CardLinkResultEvent


# Kafka - producer
spring.kafka.producer.acks=all
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.retries=10
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.max.in.flight.requests.per.connection=1
spring.kafka.producer.properties.spring.json.add.type.headers=false


# Kafka - listener
spring.kafka.listener.concurrency=1

# Topics
app.topics.card-link-request=yanki.wallet.card.link.request
app.topics.card-link-result=yanki.wallet.card.link.result
app.topics.payment-failed=wallet.payment-failed
app.topics.payment-requested=yanki.payment.requested
app.topics.payment-settled=wallet.payment-settled
app.topics.wallet-adjust-applied=wallet.adjust.applied
app.topics.wallet-adjust-failed=wallet.adjust.failed
app.topics.wallet-adjust-req=wallet.adjust.requested
app.topics.wallet-created=yanki.wallet.created
app.topics.wallet-updated=yanki.wallet.updated
app.topics.card-balance-request=cards.card.balance.request
app.topics.card-balance-response=cards.card.balance.response


eureka.client.service-url.defaultZone=http://host.docker.internal:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.hostname=host.docker.internal
eureka.instance.prefer-ip-address=true


# Actuator (útil para health checks)
management.endpoints.web.path-mapping.health=_health
management.endpoint.health.show-details=never

server.error.include-exception=false
server.error.include-message=never
server.error.include-stacktrace=never
server.error.include-binding-errors=never

